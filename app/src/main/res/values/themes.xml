<?xml version="1.0" encoding="utf-8"?>
<resources>

    <style name="Theme.App.Starting" parent="Theme.SplashScreen">
        <item name="windowSplashScreenBackground">@color/colorPrimary</item>
        <item name="windowSplashScreenAnimatedIcon">@mipmap/ic_launcher_monochrome</item>
        <item name="postSplashScreenTheme">@style/Theme.TextToSpeech</item>
    </style>

    <style name="Theme.TextToSpeech" parent="Theme.MaterialComponents.Light.NoActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <item name="android:windowLightStatusBar">true</item>
        <item name="android:statusBarColor">@color/light_gray</item>

        <item name="android:navigationBarColor">@color/colorPrimaryDark</item>

        <item name="android:windowBackground">@color/light_gray</item>
        <item name="android:textColor">@color/colorPrimaryDark</item>

        <item name="cardViewStyle">@style/MyCardViewStyle</item>
    </style>

    <style name="MyCardViewStyle" parent="@style/Widget.MaterialComponents.CardView">
        <item name="cardBackgroundColor">@color/white</item>
        <item name="android:foreground">?android:attr/selectableItemBackground</item>
        <item name="cardElevation">@dimen/spacing_xxTiny</item>
        <!-- Other CardView attributes you want to customize -->
    </style>

    <style name="ButtonStyle1" parent="@style/Widget.MaterialComponents.Button">
        <item name="backgroundTint">@color/colorPrimaryDark</item>
        <item name="android:textColor">@color/light_gray</item>
    </style>

    <style name="Theme.TextToSpeech.AppWidgetContainerParent" parent="@android:style/Theme.DeviceDefault">
        <!-- Radius of the outer bound of widgets to make the rounded corners -->
        <item name="appWidgetRadius">16dp</item>
        <!--
        Radius of the inner view's bound of widgets to make the rounded corners.
        It needs to be 8dp or less than the value of appWidgetRadius
        -->
        <item name="appWidgetInnerRadius">8dp</item>
    </style>

    <style name="Theme.TextToSpeech.AppWidgetContainer" parent="Theme.TextToSpeech.AppWidgetContainerParent">
        <!-- Apply padding to avoid the content of the widget colliding with the rounded corners -->
        <item name="appWidgetPadding">8dp</item>
    </style>

    <style name="ShapeAppearance.App.Button.Custom" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <item name="cornerFamilyTopLeft">rounded</item>
        <item name="cornerSizeTopLeft">16dp</item>
        <item name="cornerFamilyBottomLeft">rounded</item>
        <item name="cornerSizeBottomLeft">16dp</item>
        <item name="cornerFamilyTopRight">cut</item>
        <item name="cornerSizeTopRight">0dp</item>
        <item name="cornerFamilyBottomRight">cut</item>
        <item name="cornerSizeBottomRight">0dp</item>
    </style>
</resources>